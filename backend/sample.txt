Running main() from gtest_main.cc
[==========] Running 4 tests from 4 test cases.
[----------] Global test environment set-up.
[----------] 1 test from AE
[ RUN      ] AE.CanAdd
[       OK ] AE.CanAdd (284 ms)
[----------] 1 test from AE (284 ms total)

[----------] 1 test from Assignment
[ RUN      ] Assignment.OfVariable
[       OK ] Assignment.OfVariable (105 ms)
[----------] 1 test from Assignment (105 ms total)

[----------] 1 test from Create
[ RUN      ] Create.Function
[       OK ] Create.Function (121 ms)
[----------] 1 test from Create (121 ms total)

[----------] 1 test from Call
[ RUN      ] Call.Function
/*#### Start of IR ####

# S0:  ###BEGIN FUNct DEF###
# S1:  .type foo, @function
foo:
push %rbp
mov %rsp, %rbp
sub $0, %rsp

# S2:  push -8(%rbp)

# S3:  push 16(%rbp)

# S4:  push $5

# S5:  t1 = param_a + 5
# S6:  local_b = t1
# S7:  push -8(%rbp)

# S8:  push $5

# S9:  t2 = local_b + 5
# S10:  pop %rax
mov %rbp, %rsp
pop %rbp
ret
# S11:  ###END FUN DEF###
# S12:  .global main
.text
main:
mov %rsp, %rbp

# S13:  alloc 8*1 bytes:
# S14:  push -8(%rbp)

# S15:  push $12

# S16:  a = 12
# S17:  push $12

# S18:  call foo

# S19:  push %rax

# S20:  pop -16(%rbp)

# S21:  add $8, %rsp

# S22:  push -16(%rbp)

# S23:  push $20

# S24:  t3 = foo_retval + 20

#### End of IR ####*/

#### Start of Assembly ####

#### Start of Statements ####
statementnumber_0:
###BEGIN FUNct DEF###
statementnumber_1:
.type foo, @function
foo:
push %rbp
mov %rsp, %rbp
sub $0, %rsp

statementnumber_2:
push -8(%rbp)

statementnumber_3:
push 16(%rbp)

statementnumber_4:
push $5

statementnumber_5:
pop %rax
pop %rbx
add %rax, %rbx
push %rbx

statementnumber_6:
pop -8(%rbp)
statementnumber_7:
push -8(%rbp)

statementnumber_8:
push $5

statementnumber_9:
pop %rax
pop %rbx
add %rax, %rbx
push %rbx

statementnumber_10:
pop %rax
mov %rbp, %rsp
pop %rbp
ret
statementnumber_11:
###END FUN DEF###
statementnumber_12:
.global main
.text
main:
mov %rsp, %rbp

statementnumber_13:
sub $8, %rsp
statementnumber_14:
push -8(%rbp)

statementnumber_15:
push $12

statementnumber_16:
pop -8(%rbp)
statementnumber_17:
push $12

statementnumber_18:
call foo

statementnumber_19:
push %rax

statementnumber_20:
pop -16(%rbp)

statementnumber_21:
add $8, %rsp

statementnumber_22:
push -16(%rbp)

statementnumber_23:
push $20

statementnumber_24:
pop %rax
pop %rbx
add %rax, %rbx
push %rbx

#### End of Statements ####

pop %rax
mov     $format, %rdi
mov     %rax, %rsi
xor     %rax, %rax
call    printf

##DESTROY LOCAL VARS
add $8, %rsp
##end DESTROY LOCAL VARS

  ret
format:
  .asciz  "%d\n"

.data

#### End of Assembly ####
backend/v5testsArithmeticOps.cc:257: Failure
Value of: output
  Actual: ""
Expected: "42"
[  FAILED  ] Call.Function (111 ms)
[----------] 1 test from Call (111 ms total)

[----------] Global test environment tear-down
[==========] 4 tests from 4 test cases ran. (621 ms total)
[  PASSED  ] 3 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Call.Function

 1 FAILED TEST
